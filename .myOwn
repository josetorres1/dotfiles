#!/usr/bin/env bash

# ~/.macos — https://mths.be/macos
# Modified by Jose Torres
# Run without downloading:
# curl https://raw.githubusercontent.com/josetorres1/dotfiles/master/.myOwn | bash

# Close any open System Preferences panes, to prevent them from overriding
# settings we’re about to change
osascript -e 'tell application "System Preferences" to quit'

# Ask for the administrator password upfront
sudo -v

# Keep-alive: update existing `sudo` time stamp until `.macos` has finished
while true; do sudo -n true; sleep 60; kill -0 "$$" || exit; done 2>/dev/null &

###############################################################################
# Jose's Customizations                                                       #
###############################################################################

echo "Hello $(whoami)! Let's get you set up."

echo "mkdir -p $(HOME)/code"
mkdir -p "$(HOME)/code"
touch ~/.zshrc
echo "installing Xcode command line tools"
xcode-select --install

echo "installing Oh-My-ZSH"
sh -c "$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)"
git clone https://github.com/romkatv/powerlevel10k.git $ZSH_CUSTOM/themes/powerlevel10k
sed -i -e 's/ZSH_THEME=robbyrussell/ZSH_THEME="powerlevel10k/powerlevel10k"' ~/.zshrc
git clone https://github.com/zsh-users/zsh-autosuggestions ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-autosuggestions


echo "installing homebrew"
# install homebrew https://brew.sh
/usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"

echo "brew installing stuff"
# ripgrep: rg is faster than alternatives
# imagemagick: eventually I will need this for something
# ffmpeg: eventually I'll need this for something
# tree: really handy for listing out directories in text
# bat: A cat(1) clone with syntax highlighting and Git integration.
brew install git  ripgrep imagemagick bash-completion watchman tree bat nvm zsh-syntax-highlighting



echo 'export NVM_DIR="$HOME/.nvm \"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh" # This loads nvm \
source /usr/local/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh' >> ~/.zshrc


echo "installing node (via NVM)"
source ~/.zshrc
nvm install 10.22.0

echo "node --version: $(node --version)"
echo "npm --version: $(npm --version)"

echo "installing a few global npm packages"
npm install --global gatsby-cli expo-cli yarn

echo "installing apps with brew cask"
brew cask install alfred google-chrome firefox brave-browser \
adoptopenjdk8		discord			notion			telegram		zoom \
android-studio		docker			openwebstart		the-unarchiver \
anydesk			forticlient		postman			visual-studio-code \
brave-browser		iterm2			slack			vlc \
dbeaver-community	microsoft-teams		spotify			whatsapp  dash \
marshallofsound-google-play-music-player screenflow skype rocket \
obs lastpass

echo "Generating an RSA token for GitHub"
mkdir -p ~/.ssh
ssh-keygen -t ed25519 -C "jose.torres95@outlook.com"
echo "Host github.com\n  HostName github.com\n AddKeysToAgent yes\n UseKeychain yes\n IdentityFile ~/.ssh/id_ed25519_github\n  IdentitiesOnly yes" | tee ~/.ssh/config
eval "$(ssh-agent -s)"
cat ~/.ssh/id_ed25519_github.pub

ssh-keygen -t ed25519 -C "jose.torres95@outlook.com"
echo "Host gitlab.com\n  HostName gitlab.com\n AddKeysToAgent yes\n UseKeychain yes\n IdentityFile ~/.ssh/id_ed25519_gitlab\n  IdentitiesOnly yes" | tee -a ~/.ssh/config
eval "$(ssh-agent -s)"
cat ~/.ssh/id_ed25519_gitlab.pub
